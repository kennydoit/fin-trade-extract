-- DEBUG VERSION: Load company overview CSV files to see actual structure
-- This version focuses on getting ANY data loaded first, then we can optimize

USE DATABASE FIN_TRADE_EXTRACT;
USE SCHEMA RAW;
USE WAREHOUSE FIN_TRADE_WH;
USE ROLE ACCOUNTADMIN;

-- 1) Create stage if needed
CREATE STAGE IF NOT EXISTS FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGE
  URL='s3://fin-trade-craft-landing/company_overview/'
  STORAGE_INTEGRATION = FIN_TRADE_S3_INTEGRATION;

-- 2) Create main COMPANY_OVERVIEW table with proper data types
CREATE TABLE IF NOT EXISTS FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW (
  SYMBOL_ID NUMBER(38,0),
  SYMBOL VARCHAR(20),
  ASSET_TYPE VARCHAR(50),
  NAME VARCHAR(500),
  DESCRIPTION TEXT,
  CIK VARCHAR(20),
  EXCHANGE VARCHAR(50),
  CURRENCY VARCHAR(10),
  COUNTRY VARCHAR(100),
  SECTOR VARCHAR(100),
  INDUSTRY VARCHAR(200),
  ADDRESS TEXT,
  OFFICIAL_SITE VARCHAR(500),
  FISCAL_YEAR_END VARCHAR(50),
  MARKET_CAPITALIZATION NUMBER,
  EBITDA NUMBER,
  PE_RATIO NUMBER,
  PEG_RATIO NUMBER,
  BOOK_VALUE NUMBER,
  DIVIDEND_PER_SHARE NUMBER,
  DIVIDEND_YIELD NUMBER,
  EPS NUMBER,
  REVENUE_PER_SHARE_TTM NUMBER,
  PROFIT_MARGIN NUMBER,
  OPERATING_MARGIN_TTM NUMBER,
  RETURN_ON_ASSETS_TTM NUMBER,
  RETURN_ON_EQUITY_TTM NUMBER,
  REVENUE_TTM NUMBER,
  GROSS_PROFIT_TTM NUMBER,
  DILUTED_EPS_TTM NUMBER,
  QUARTERLY_EARNINGS_GROWTH_YOY NUMBER,
  QUARTERLY_REVENUE_GROWTH_YOY NUMBER,
  ANALYST_TARGET_PRICE NUMBER,
  TRAILING_PE NUMBER,
  FORWARD_PE NUMBER,
  PRICE_TO_SALES_RATIO_TTM NUMBER,
  PRICE_TO_BOOK_RATIO NUMBER,
  EV_TO_REVENUE NUMBER,
  EV_TO_EBITDA NUMBER,
  BETA NUMBER,
  WEEK_52_HIGH NUMBER,
  WEEK_52_LOW NUMBER,
  DAY_50_MOVING_AVERAGE NUMBER,
  DAY_200_MOVING_AVERAGE NUMBER,
  SHARES_OUTSTANDING NUMBER,
  DIVIDEND_DATE DATE,
  EX_DIVIDEND_DATE DATE,
  LATEST_QUARTER DATE,
  PROCESSED_DATE DATE,
  LOAD_DATE VARCHAR(50),
  UPDATED_AT TIMESTAMP DEFAULT CURRENT_TIMESTAMP()
);

-- 3) Create staging table with proper Alpha Vantage field names - ALL VARCHAR to avoid type issues
CREATE OR REPLACE TRANSIENT TABLE FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING (
  -- Core identification
  SYMBOL VARCHAR(500),
  
  -- Company info (matching Alpha Vantage API response keys)
  ASSETTYPE VARCHAR(500),
  NAME VARCHAR(500),
  DESCRIPTION VARCHAR(1000),
  CIK VARCHAR(500),
  EXCHANGE VARCHAR(500),
  CURRENCY VARCHAR(500),
  COUNTRY VARCHAR(500),
  SECTOR VARCHAR(500),
  INDUSTRY VARCHAR(500),
  ADDRESS VARCHAR(1000),
  OFFICIALSITE VARCHAR(500),
  
  -- Key fiscal fields you mentioned
  FISCALYEAREND VARCHAR(500),
  LATESTQUARTER VARCHAR(500),
  
  -- Financial metrics (all VARCHAR to avoid type conversion issues)
  MARKETCAPITALIZATION VARCHAR(500),
  EBITDA VARCHAR(500),
  PERATIO VARCHAR(500),
  PEGRATIO VARCHAR(500),
  BOOKVALUE VARCHAR(500),
  DIVIDENDPERSHARE VARCHAR(500),
  DIVIDENDYIELD VARCHAR(500),
  EPS VARCHAR(500),
  REVENUPERSHARETTM VARCHAR(500),
  PROFITMARGIN VARCHAR(500),
  OPERATINGMARGINTTM VARCHAR(500),
  RETURNONASSETSTTM VARCHAR(500),
  RETURNONEQUITYTTM VARCHAR(500),
  REVENUETTM VARCHAR(500),
  GROSSPROFITTTM VARCHAR(500),
  DILUTEDEPSTTM VARCHAR(500),
  QUARTERLYEARNINGSGROWTHYOY VARCHAR(500),
  QUARTERLYREVENUEGROWTHYOY VARCHAR(500),
  ANALYSTTARGETPRICE VARCHAR(500),
  TRAILINGPE VARCHAR(500),
  FORWARDPE VARCHAR(500),
  PRICETOSALESRATIOTTM VARCHAR(500),
  PRICETOBOOKRATIO VARCHAR(500),
  EVTOREVENUE VARCHAR(500),
  EVTOEBITDA VARCHAR(500),
  BETA VARCHAR(500),
  
  -- Price data
  "52WEEKHIGH" VARCHAR(500),
  "52WEEKLOW" VARCHAR(500),
  "50DAYMOVINGAVERAGE" VARCHAR(500),
  "200DAYMOVINGAVERAGE" VARCHAR(500),
  SHARESOUTSTANDING VARCHAR(500),
  
  -- Dividend dates
  DIVIDENDDATE VARCHAR(500),
  EXDIVIDENDDATE VARCHAR(500),
  
  -- Processing metadata (added by Python script)
  SYMBOL_ID VARCHAR(500),
  PROCESSED_DATE VARCHAR(500),
  LOAD_DATE VARCHAR(500),
  
  -- File tracking
  source_file VARCHAR(500)
);

-- Debug: Check what files are in the stage
SELECT 'Files in S3 stage:' as MESSAGE;
LIST @COMPANY_OVERVIEW_STAGE;

-- Debug: Check if RAW_CSV_FORMAT exists
SHOW FILE FORMATS LIKE 'RAW_CSV_FORMAT';

-- Load CSV files directly using proper column names
COPY INTO FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING 
FROM @COMPANY_OVERVIEW_STAGE
FILE_FORMAT = (
  TYPE = 'CSV',
  FIELD_DELIMITER = ',',
  RECORD_DELIMITER = '\n',
  SKIP_HEADER = 1,
  FIELD_OPTIONALLY_ENCLOSED_BY = '"',
  ESCAPE = '\\',
  NULL_IF = ('', 'NULL', 'null', 'None'),
  EMPTY_FIELD_AS_NULL = TRUE,
  ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE
)
PATTERN = 'overview_.*\\.csv'
ON_ERROR = CONTINUE;

-- Debug: Check load results
SELECT 'Load Results:' as MESSAGE;

SELECT 
    'Total rows loaded:' as METRIC,
    COUNT(*) as VALUE
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING;

SELECT 
    'Files processed:' as METRIC,
    COUNT(DISTINCT source_file) as VALUE
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING;

-- Show files and row counts
SELECT 
    source_file,
    COUNT(*) as rows_per_file
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING 
GROUP BY source_file
ORDER BY source_file;

-- Show sample data with proper column names
SELECT 'Core company information:' as MESSAGE;
SELECT 
    SYMBOL, NAME, EXCHANGE, ASSETTYPE, COUNTRY, SECTOR, INDUSTRY,
    source_file
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING 
LIMIT 3;

-- Show key fiscal fields you mentioned
SELECT 'Key fiscal data fields:' as MESSAGE;
SELECT 
    SYMBOL, FISCALYEAREND, LATESTQUARTER, MARKETCAPITALIZATION,
    source_file
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING 
LIMIT 3;

-- Show financial metrics
SELECT 'Financial metrics sample:' as MESSAGE;
SELECT 
    SYMBOL, PERATIO, EPS, PROFITMARGIN, BETA, 
    "52WEEKHIGH", "52WEEKLOW",
    source_file
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING 
LIMIT 3;

-- Show processing metadata
SELECT 'Processing metadata:' as MESSAGE;
SELECT 
    SYMBOL, SYMBOL_ID, PROCESSED_DATE, LOAD_DATE,
    source_file
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING 
LIMIT 3;

-- Check for data completeness in key fields
SELECT 'Data completeness analysis:' as MESSAGE;
SELECT 
    COUNT(*) as total_rows,
    COUNT(SYMBOL) as symbols_with_data,
    COUNT(FISCALYEAREND) as fiscal_year_end_populated,
    COUNT(LATESTQUARTER) as latest_quarter_populated,
    COUNT(MARKETCAPITALIZATION) as market_cap_populated,
    COUNT(NAME) as company_name_populated
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING;

-- NO DELETE STATEMENTS - KEEP ALL DATA FOR DEBUGGING

-- Transfer data from staging to main table with proper type conversions
INSERT INTO FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW (
  SYMBOL_ID, SYMBOL, ASSET_TYPE, NAME, DESCRIPTION, CIK, EXCHANGE, CURRENCY, COUNTRY,
  SECTOR, INDUSTRY, ADDRESS, OFFICIAL_SITE, FISCAL_YEAR_END, MARKET_CAPITALIZATION,
  EBITDA, PE_RATIO, PEG_RATIO, BOOK_VALUE, DIVIDEND_PER_SHARE, DIVIDEND_YIELD, EPS,
  REVENUE_PER_SHARE_TTM, PROFIT_MARGIN, OPERATING_MARGIN_TTM, RETURN_ON_ASSETS_TTM,
  RETURN_ON_EQUITY_TTM, REVENUE_TTM, GROSS_PROFIT_TTM, DILUTED_EPS_TTM,
  QUARTERLY_EARNINGS_GROWTH_YOY, QUARTERLY_REVENUE_GROWTH_YOY, ANALYST_TARGET_PRICE,
  TRAILING_PE, FORWARD_PE, PRICE_TO_SALES_RATIO_TTM, PRICE_TO_BOOK_RATIO,
  EV_TO_REVENUE, EV_TO_EBITDA, BETA, WEEK_52_HIGH, WEEK_52_LOW,
  DAY_50_MOVING_AVERAGE, DAY_200_MOVING_AVERAGE, SHARES_OUTSTANDING,
  DIVIDEND_DATE, EX_DIVIDEND_DATE, LATEST_QUARTER, PROCESSED_DATE, LOAD_DATE, UPDATED_AT
)
SELECT 
  TRY_TO_NUMBER(SYMBOL_ID) as SYMBOL_ID,
  SYMBOL,
  ASSETTYPE as ASSET_TYPE,
  NAME,
  DESCRIPTION,
  CIK,
  EXCHANGE,
  CURRENCY,
  COUNTRY,
  SECTOR,
  INDUSTRY,
  ADDRESS,
  OFFICIALSITE as OFFICIAL_SITE,
  FISCALYEAREND as FISCAL_YEAR_END,
  TRY_TO_NUMBER(MARKETCAPITALIZATION) as MARKET_CAPITALIZATION,
  TRY_TO_NUMBER(EBITDA) as EBITDA,
  TRY_TO_NUMBER(PERATIO) as PE_RATIO,
  TRY_TO_NUMBER(PEGRATIO) as PEG_RATIO,
  TRY_TO_NUMBER(BOOKVALUE) as BOOK_VALUE,
  TRY_TO_NUMBER(DIVIDENDPERSHARE) as DIVIDEND_PER_SHARE,
  TRY_TO_NUMBER(DIVIDENDYIELD) as DIVIDEND_YIELD,
  TRY_TO_NUMBER(EPS) as EPS,
  TRY_TO_NUMBER(REVENUPERSHARETTM) as REVENUE_PER_SHARE_TTM,
  TRY_TO_NUMBER(PROFITMARGIN) as PROFIT_MARGIN,
  TRY_TO_NUMBER(OPERATINGMARGINTTM) as OPERATING_MARGIN_TTM,
  TRY_TO_NUMBER(RETURNONASSETSTTM) as RETURN_ON_ASSETS_TTM,
  TRY_TO_NUMBER(RETURNONEQUITYTTM) as RETURN_ON_EQUITY_TTM,
  TRY_TO_NUMBER(REVENUETTM) as REVENUE_TTM,
  TRY_TO_NUMBER(GROSSPROFITTTM) as GROSS_PROFIT_TTM,
  TRY_TO_NUMBER(DILUTEDEPSTTM) as DILUTED_EPS_TTM,
  TRY_TO_NUMBER(QUARTERLYEARNINGSGROWTHYOY) as QUARTERLY_EARNINGS_GROWTH_YOY,
  TRY_TO_NUMBER(QUARTERLYREVENUEGROWTHYOY) as QUARTERLY_REVENUE_GROWTH_YOY,
  TRY_TO_NUMBER(ANALYSTTARGETPRICE) as ANALYST_TARGET_PRICE,
  TRY_TO_NUMBER(TRAILINGPE) as TRAILING_PE,
  TRY_TO_NUMBER(FORWARDPE) as FORWARD_PE,
  TRY_TO_NUMBER(PRICETOSALESRATIOTTM) as PRICE_TO_SALES_RATIO_TTM,
  TRY_TO_NUMBER(PRICETOBOOKRATIO) as PRICE_TO_BOOK_RATIO,
  TRY_TO_NUMBER(EVTOREVENUE) as EV_TO_REVENUE,
  TRY_TO_NUMBER(EVTOEBITDA) as EV_TO_EBITDA,
  TRY_TO_NUMBER(BETA) as BETA,
  TRY_TO_NUMBER("52WEEKHIGH") as WEEK_52_HIGH,
  TRY_TO_NUMBER("52WEEKLOW") as WEEK_52_LOW,
  TRY_TO_NUMBER("50DAYMOVINGAVERAGE") as DAY_50_MOVING_AVERAGE,
  TRY_TO_NUMBER("200DAYMOVINGAVERAGE") as DAY_200_MOVING_AVERAGE,
  TRY_TO_NUMBER(SHARESOUTSTANDING) as SHARES_OUTSTANDING,
  TRY_TO_DATE(DIVIDENDDATE, 'YYYY-MM-DD') as DIVIDEND_DATE,
  TRY_TO_DATE(EXDIVIDENDDATE, 'YYYY-MM-DD') as EX_DIVIDEND_DATE,
  TRY_TO_DATE(LATESTQUARTER, 'YYYY-MM-DD') as LATEST_QUARTER,
  TRY_TO_DATE(PROCESSED_DATE, 'YYYY-MM-DD') as PROCESSED_DATE,
  LOAD_DATE,
  CURRENT_TIMESTAMP() as UPDATED_AT
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING
WHERE SYMBOL IS NOT NULL AND SYMBOL != '' AND SYMBOL != 'Symbol';

-- Show final results
SELECT 'Data transfer completed!' as MESSAGE;

SELECT 
    'Records in staging table:' as METRIC,
    COUNT(*) as VALUE
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW_STAGING;

SELECT 
    'Records in main COMPANY_OVERVIEW table:' as METRIC,
    COUNT(*) as VALUE
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW;

-- Show sample records in main table
SELECT 'Sample records in main table:' as MESSAGE;
SELECT 
    SYMBOL, FISCAL_YEAR_END, LATEST_QUARTER, MARKET_CAPITALIZATION, UPDATED_AT
FROM FIN_TRADE_EXTRACT.RAW.COMPANY_OVERVIEW
ORDER BY SYMBOL
LIMIT 5;

SELECT 'Debug staging table created successfully! Check the output above to understand the CSV structure.' as COMPLETION_MESSAGE;

-- Do NOT drop the staging table
SELECT 'Staging table preserved for debugging' as PRESERVATION_MESSAGE;