-- ============================================================================
-- Load Cash Flow Data from S3 to Snowflake
-- 
-- Purpose: Loads cash flow statement data from S3 staged files
-- Source: Alpha Vantage CASH_FLOW API endpoint
-- Destination: FIN_TRADE_EXTRACT.RAW.CASH_FLOW
-- Update Strategy: MERGE (upsert based on SYMBOL + FISCAL_DATE_ENDING + PERIOD_TYPE)
-- ============================================================================

USE DATABASE FIN_TRADE_EXTRACT;
USE SCHEMA RAW;
USE WAREHOUSE FIN_TRADE_WH;
USE ROLE ETL_ROLE;

-- Step 1: Create external stage pointing to S3 cash flow folder
CREATE OR REPLACE STAGE FIN_TRADE_EXTRACT.RAW.S3_CASH_FLOW_STAGE
  URL='s3://fin-trade-craft-landing/cash_flow/'
  STORAGE_INTEGRATION = FIN_TRADE_S3_INTEGRATION
  FILE_FORMAT = (
    TYPE = 'CSV'
    COMPRESSION = 'AUTO'
    FIELD_DELIMITER = ','
    RECORD_DELIMITER = '\n'
    SKIP_HEADER = 1
    NULL_IF = ('NULL', 'null', '', 'None')
    EMPTY_FIELD_AS_NULL = TRUE
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    TRIM_SPACE = TRUE
    ERROR_ON_COLUMN_COUNT_MISMATCH = FALSE
    ENCODING = 'UTF8'
  );

-- Step 2: List files in stage to verify content
LIST @S3_CASH_FLOW_STAGE;

-- Step 3: Create the target table if it doesn't exist
CREATE TABLE IF NOT EXISTS FIN_TRADE_EXTRACT.RAW.CASH_FLOW (
    SYMBOL VARCHAR(20) NOT NULL,
    FISCAL_DATE_ENDING DATE NOT NULL,
    PERIOD_TYPE VARCHAR(20) NOT NULL,  -- 'annual' or 'quarterly'
    REPORTED_CURRENCY VARCHAR(10),
    
    -- Operating Activities
    OPERATING_CASHFLOW NUMBER(38, 2),
    PAYMENTS_FOR_OPERATING_ACTIVITIES NUMBER(38, 2),
    PROCEEDS_FROM_OPERATING_ACTIVITIES NUMBER(38, 2),
    CHANGE_IN_OPERATING_LIABILITIES NUMBER(38, 2),
    CHANGE_IN_OPERATING_ASSETS NUMBER(38, 2),
    DEPRECIATION_DEPLETION_AND_AMORTIZATION NUMBER(38, 2),
    CAPITAL_EXPENDITURES NUMBER(38, 2),
    CHANGE_IN_RECEIVABLES NUMBER(38, 2),
    CHANGE_IN_INVENTORY NUMBER(38, 2),
    PROFIT_LOSS NUMBER(38, 2),
    
    -- Investing Activities
    CASHFLOW_FROM_INVESTMENT NUMBER(38, 2),
    PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS NUMBER(38, 2),
    PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS NUMBER(38, 2),
    PROCEEDS_FROM_SALE_OF_PPE NUMBER(38, 2),
    
    -- Financing Activities
    CASHFLOW_FROM_FINANCING NUMBER(38, 2),
    PROCEEDS_FROM_REPURCHASE_OF_EQUITY NUMBER(38, 2),
    PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT NUMBER(38, 2),
    PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK NUMBER(38, 2),
    PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT NUMBER(38, 2),
    PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK NUMBER(38, 2),
    PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK NUMBER(38, 2),
    DIVIDEND_PAYOUT NUMBER(38, 2),
    DIVIDEND_PAYOUT_COMMON_STOCK NUMBER(38, 2),
    DIVIDEND_PAYOUT_PREFERRED_STOCK NUMBER(38, 2),
    
    -- Summary Metrics
    CHANGE_IN_CASH_AND_CASH_EQUIVALENTS NUMBER(38, 2),
    CHANGE_IN_EXCHANGE_RATE NUMBER(38, 2),
    NET_INCOME NUMBER(38, 2),
    
    -- Metadata
    SYMBOL_ID NUMBER(38, 0),  -- Consistent hash for joins
    LOAD_DATE DATE DEFAULT CURRENT_DATE(),
    
    -- Constraints
    CONSTRAINT PK_CASH_FLOW PRIMARY KEY (SYMBOL, FISCAL_DATE_ENDING, PERIOD_TYPE)
);

-- Add comment to table
COMMENT ON TABLE FIN_TRADE_EXTRACT.RAW.CASH_FLOW IS 
'Cash flow statement data from Alpha Vantage. Contains both annual and quarterly cash flow metrics including operating, investing, and financing activities. Updated via watermark-based ETL.';

-- Step 4: Create a transient staging table for loading data from S3
CREATE OR REPLACE TRANSIENT TABLE FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE (
    SYMBOL VARCHAR(20),
    FISCAL_DATE_ENDING VARCHAR(50),
    PERIOD_TYPE VARCHAR(20),
    REPORTED_CURRENCY VARCHAR(10),
    OPERATING_CASHFLOW VARCHAR(50),
    PAYMENTS_FOR_OPERATING_ACTIVITIES VARCHAR(50),
    PROCEEDS_FROM_OPERATING_ACTIVITIES VARCHAR(50),
    CHANGE_IN_OPERATING_LIABILITIES VARCHAR(50),
    CHANGE_IN_OPERATING_ASSETS VARCHAR(50),
    DEPRECIATION_DEPLETION_AND_AMORTIZATION VARCHAR(50),
    CAPITAL_EXPENDITURES VARCHAR(50),
    CHANGE_IN_RECEIVABLES VARCHAR(50),
    CHANGE_IN_INVENTORY VARCHAR(50),
    PROFIT_LOSS VARCHAR(50),
    CASHFLOW_FROM_INVESTMENT VARCHAR(50),
    CASHFLOW_FROM_FINANCING VARCHAR(50),
    PROCEEDS_FROM_REPURCHASE_OF_EQUITY VARCHAR(50),
    PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS VARCHAR(50),
    PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS VARCHAR(50),
    PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT VARCHAR(50),
    PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK VARCHAR(50),
    PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT VARCHAR(50),
    PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK VARCHAR(50),
    PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK VARCHAR(50),
    DIVIDEND_PAYOUT VARCHAR(50),
    DIVIDEND_PAYOUT_COMMON_STOCK VARCHAR(50),
    DIVIDEND_PAYOUT_PREFERRED_STOCK VARCHAR(50),
    PROCEEDS_FROM_SALE_OF_PPE VARCHAR(50),
    CHANGE_IN_CASH_AND_CASH_EQUIVALENTS VARCHAR(50),
    CHANGE_IN_EXCHANGE_RATE VARCHAR(50),
    NET_INCOME VARCHAR(50)
);

-- Step 5: Copy data from S3 to staging table
COPY INTO FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE
FROM @FIN_TRADE_EXTRACT.RAW.S3_CASH_FLOW_STAGE
FILE_FORMAT = (
    TYPE = 'CSV'
    FIELD_DELIMITER = ','
    SKIP_HEADER = 1
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    NULL_IF = ('None', 'null', '', 'N/A')
    EMPTY_FIELD_AS_NULL = TRUE
    TRIM_SPACE = TRUE
)
PATTERN = '.*\.csv'
ON_ERROR = 'CONTINUE'
FORCE = TRUE;

-- Step 6: Show staging statistics
SELECT 
    'Staging Statistics' as step,
    COUNT(*) as total_rows,
    COUNT(DISTINCT SYMBOL) as unique_symbols,
    COUNT(CASE WHEN PERIOD_TYPE = 'annual' THEN 1 END) as annual_reports,
    COUNT(CASE WHEN PERIOD_TYPE = 'quarterly' THEN 1 END) as quarterly_reports,
    MIN(TRY_TO_DATE(FISCAL_DATE_ENDING, 'YYYY-MM-DD')) as earliest_date,
    MAX(TRY_TO_DATE(FISCAL_DATE_ENDING, 'YYYY-MM-DD')) as latest_date
FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE;

-- Step 7: Data quality checks
SELECT 'Data Quality Check - Missing Keys' as check_type,
       COUNT(*) as issues
FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE
WHERE SYMBOL IS NULL 
   OR FISCAL_DATE_ENDING IS NULL
   OR PERIOD_TYPE IS NULL;

SELECT 'Data Quality Check - Invalid Dates' as check_type,
       COUNT(*) as issues
FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE
WHERE TRY_TO_DATE(FISCAL_DATE_ENDING, 'YYYY-MM-DD') IS NULL;

SELECT 'Data Quality Check - Invalid Period Types' as check_type,
       COUNT(*) as issues
FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE
WHERE PERIOD_TYPE NOT IN ('annual', 'quarterly');

-- Step 8: Show sample of staged data
SELECT 'Sample Staged Data' as step,
       SYMBOL,
       FISCAL_DATE_ENDING,
       PERIOD_TYPE,
       OPERATING_CASHFLOW,
       CASHFLOW_FROM_INVESTMENT,
       CASHFLOW_FROM_FINANCING,
       NET_INCOME
FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE
LIMIT 5;

-- Step 9: Merge staged data into target table
MERGE INTO FIN_TRADE_EXTRACT.RAW.CASH_FLOW target
USING (
    SELECT 
        SYMBOL,
        TRY_TO_DATE(FISCAL_DATE_ENDING, 'YYYY-MM-DD') as FISCAL_DATE_ENDING,
        PERIOD_TYPE,
        REPORTED_CURRENCY,
        
        -- Operating Activities (convert empty strings/None to NULL, then to NUMBER)
        TRY_TO_NUMBER(NULLIF(OPERATING_CASHFLOW, ''), 38, 2) as OPERATING_CASHFLOW,
        TRY_TO_NUMBER(NULLIF(PAYMENTS_FOR_OPERATING_ACTIVITIES, ''), 38, 2) as PAYMENTS_FOR_OPERATING_ACTIVITIES,
        TRY_TO_NUMBER(NULLIF(PROCEEDS_FROM_OPERATING_ACTIVITIES, ''), 38, 2) as PROCEEDS_FROM_OPERATING_ACTIVITIES,
        TRY_TO_NUMBER(NULLIF(CHANGE_IN_OPERATING_LIABILITIES, ''), 38, 2) as CHANGE_IN_OPERATING_LIABILITIES,
        TRY_TO_NUMBER(NULLIF(CHANGE_IN_OPERATING_ASSETS, ''), 38, 2) as CHANGE_IN_OPERATING_ASSETS,
        TRY_TO_NUMBER(NULLIF(DEPRECIATION_DEPLETION_AND_AMORTIZATION, ''), 38, 2) as DEPRECIATION_DEPLETION_AND_AMORTIZATION,
        TRY_TO_NUMBER(NULLIF(CAPITAL_EXPENDITURES, ''), 38, 2) as CAPITAL_EXPENDITURES,
        TRY_TO_NUMBER(NULLIF(CHANGE_IN_RECEIVABLES, ''), 38, 2) as CHANGE_IN_RECEIVABLES,
        TRY_TO_NUMBER(NULLIF(CHANGE_IN_INVENTORY, ''), 38, 2) as CHANGE_IN_INVENTORY,
        TRY_TO_NUMBER(NULLIF(PROFIT_LOSS, ''), 38, 2) as PROFIT_LOSS,
        
        -- Investing Activities
        TRY_TO_NUMBER(NULLIF(CASHFLOW_FROM_INVESTMENT, ''), 38, 2) as CASHFLOW_FROM_INVESTMENT,
        TRY_TO_NUMBER(NULLIF(PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS, ''), 38, 2) as PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS,
        TRY_TO_NUMBER(NULLIF(PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS, ''), 38, 2) as PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS,
        TRY_TO_NUMBER(NULLIF(PROCEEDS_FROM_SALE_OF_PPE, ''), 38, 2) as PROCEEDS_FROM_SALE_OF_PPE,
        
        -- Financing Activities
        TRY_TO_NUMBER(NULLIF(CASHFLOW_FROM_FINANCING, ''), 38, 2) as CASHFLOW_FROM_FINANCING,
        TRY_TO_NUMBER(NULLIF(PROCEEDS_FROM_REPURCHASE_OF_EQUITY, ''), 38, 2) as PROCEEDS_FROM_REPURCHASE_OF_EQUITY,
        TRY_TO_NUMBER(NULLIF(PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT, ''), 38, 2) as PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT,
        TRY_TO_NUMBER(NULLIF(PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK, ''), 38, 2) as PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK,
        TRY_TO_NUMBER(NULLIF(PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT, ''), 38, 2) as PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT,
        TRY_TO_NUMBER(NULLIF(PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK, ''), 38, 2) as PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK,
        TRY_TO_NUMBER(NULLIF(PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK, ''), 38, 2) as PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK,
        TRY_TO_NUMBER(NULLIF(DIVIDEND_PAYOUT, ''), 38, 2) as DIVIDEND_PAYOUT,
        TRY_TO_NUMBER(NULLIF(DIVIDEND_PAYOUT_COMMON_STOCK, ''), 38, 2) as DIVIDEND_PAYOUT_COMMON_STOCK,
        TRY_TO_NUMBER(NULLIF(DIVIDEND_PAYOUT_PREFERRED_STOCK, ''), 38, 2) as DIVIDEND_PAYOUT_PREFERRED_STOCK,
        
        -- Summary Metrics
        TRY_TO_NUMBER(NULLIF(CHANGE_IN_CASH_AND_CASH_EQUIVALENTS, ''), 38, 2) as CHANGE_IN_CASH_AND_CASH_EQUIVALENTS,
        TRY_TO_NUMBER(NULLIF(CHANGE_IN_EXCHANGE_RATE, ''), 38, 2) as CHANGE_IN_EXCHANGE_RATE,
        TRY_TO_NUMBER(NULLIF(NET_INCOME, ''), 38, 2) as NET_INCOME,
        
        -- Metadata
        ABS(HASH(SYMBOL)) % 1000000000 as SYMBOL_ID,
        CURRENT_DATE() as LOAD_DATE
        
    FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE
    WHERE SYMBOL IS NOT NULL
      AND FISCAL_DATE_ENDING IS NOT NULL
      AND PERIOD_TYPE IS NOT NULL
      AND TRY_TO_DATE(FISCAL_DATE_ENDING, 'YYYY-MM-DD') IS NOT NULL
) source
ON target.SYMBOL = source.SYMBOL
   AND target.FISCAL_DATE_ENDING = source.FISCAL_DATE_ENDING
   AND target.PERIOD_TYPE = source.PERIOD_TYPE

WHEN MATCHED THEN UPDATE SET
    target.REPORTED_CURRENCY = source.REPORTED_CURRENCY,
    target.OPERATING_CASHFLOW = source.OPERATING_CASHFLOW,
    target.PAYMENTS_FOR_OPERATING_ACTIVITIES = source.PAYMENTS_FOR_OPERATING_ACTIVITIES,
    target.PROCEEDS_FROM_OPERATING_ACTIVITIES = source.PROCEEDS_FROM_OPERATING_ACTIVITIES,
    target.CHANGE_IN_OPERATING_LIABILITIES = source.CHANGE_IN_OPERATING_LIABILITIES,
    target.CHANGE_IN_OPERATING_ASSETS = source.CHANGE_IN_OPERATING_ASSETS,
    target.DEPRECIATION_DEPLETION_AND_AMORTIZATION = source.DEPRECIATION_DEPLETION_AND_AMORTIZATION,
    target.CAPITAL_EXPENDITURES = source.CAPITAL_EXPENDITURES,
    target.CHANGE_IN_RECEIVABLES = source.CHANGE_IN_RECEIVABLES,
    target.CHANGE_IN_INVENTORY = source.CHANGE_IN_INVENTORY,
    target.PROFIT_LOSS = source.PROFIT_LOSS,
    target.CASHFLOW_FROM_INVESTMENT = source.CASHFLOW_FROM_INVESTMENT,
    target.CASHFLOW_FROM_FINANCING = source.CASHFLOW_FROM_FINANCING,
    target.PROCEEDS_FROM_REPURCHASE_OF_EQUITY = source.PROCEEDS_FROM_REPURCHASE_OF_EQUITY,
    target.PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS = source.PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS,
    target.PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS = source.PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS,
    target.PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT = source.PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT,
    target.PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK = source.PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK,
    target.PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT = source.PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT,
    target.PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK = source.PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK,
    target.PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK = source.PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK,
    target.DIVIDEND_PAYOUT = source.DIVIDEND_PAYOUT,
    target.DIVIDEND_PAYOUT_COMMON_STOCK = source.DIVIDEND_PAYOUT_COMMON_STOCK,
    target.DIVIDEND_PAYOUT_PREFERRED_STOCK = source.DIVIDEND_PAYOUT_PREFERRED_STOCK,
    target.PROCEEDS_FROM_SALE_OF_PPE = source.PROCEEDS_FROM_SALE_OF_PPE,
    target.CHANGE_IN_CASH_AND_CASH_EQUIVALENTS = source.CHANGE_IN_CASH_AND_CASH_EQUIVALENTS,
    target.CHANGE_IN_EXCHANGE_RATE = source.CHANGE_IN_EXCHANGE_RATE,
    target.NET_INCOME = source.NET_INCOME,
    target.SYMBOL_ID = source.SYMBOL_ID,
    target.LOAD_DATE = CURRENT_DATE()

WHEN NOT MATCHED THEN INSERT (
    SYMBOL, FISCAL_DATE_ENDING, PERIOD_TYPE, REPORTED_CURRENCY,
    OPERATING_CASHFLOW, PAYMENTS_FOR_OPERATING_ACTIVITIES, PROCEEDS_FROM_OPERATING_ACTIVITIES,
    CHANGE_IN_OPERATING_LIABILITIES, CHANGE_IN_OPERATING_ASSETS, 
    DEPRECIATION_DEPLETION_AND_AMORTIZATION, CAPITAL_EXPENDITURES,
    CHANGE_IN_RECEIVABLES, CHANGE_IN_INVENTORY, PROFIT_LOSS,
    CASHFLOW_FROM_INVESTMENT, CASHFLOW_FROM_FINANCING,
    PROCEEDS_FROM_REPURCHASE_OF_EQUITY, PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS,
    PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS, PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT,
    PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK, PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT,
    PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK, PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK,
    DIVIDEND_PAYOUT, DIVIDEND_PAYOUT_COMMON_STOCK, DIVIDEND_PAYOUT_PREFERRED_STOCK,
    PROCEEDS_FROM_SALE_OF_PPE, CHANGE_IN_CASH_AND_CASH_EQUIVALENTS,
    CHANGE_IN_EXCHANGE_RATE, NET_INCOME, SYMBOL_ID, LOAD_DATE
) VALUES (
    source.SYMBOL, source.FISCAL_DATE_ENDING, source.PERIOD_TYPE, source.REPORTED_CURRENCY,
    source.OPERATING_CASHFLOW, source.PAYMENTS_FOR_OPERATING_ACTIVITIES, source.PROCEEDS_FROM_OPERATING_ACTIVITIES,
    source.CHANGE_IN_OPERATING_LIABILITIES, source.CHANGE_IN_OPERATING_ASSETS,
    source.DEPRECIATION_DEPLETION_AND_AMORTIZATION, source.CAPITAL_EXPENDITURES,
    source.CHANGE_IN_RECEIVABLES, source.CHANGE_IN_INVENTORY, source.PROFIT_LOSS,
    source.CASHFLOW_FROM_INVESTMENT, source.CASHFLOW_FROM_FINANCING,
    source.PROCEEDS_FROM_REPURCHASE_OF_EQUITY, source.PROCEEDS_FROM_SALE_OF_LONG_TERM_INVESTMENTS,
    source.PAYMENTS_FOR_ACQUISITION_OF_LONG_TERM_INVESTMENTS, source.PROCEEDS_FROM_ISSUANCE_OF_LONG_TERM_DEBT,
    source.PROCEEDS_FROM_ISSUANCE_OF_COMMON_STOCK, source.PROCEEDS_FROM_REPAYMENTS_OF_SHORT_TERM_DEBT,
    source.PAYMENTS_FOR_REPURCHASE_OF_COMMON_STOCK, source.PAYMENTS_FOR_REPURCHASE_OF_PREFERRED_STOCK,
    source.DIVIDEND_PAYOUT, source.DIVIDEND_PAYOUT_COMMON_STOCK, source.DIVIDEND_PAYOUT_PREFERRED_STOCK,
    source.PROCEEDS_FROM_SALE_OF_PPE, source.CHANGE_IN_CASH_AND_CASH_EQUIVALENTS,
    source.CHANGE_IN_EXCHANGE_RATE, source.NET_INCOME, source.SYMBOL_ID, source.LOAD_DATE
);

-- Step 10: Show merge results
SELECT 
    'Merge Complete' as status,
    COUNT(*) as total_records,
    COUNT(DISTINCT SYMBOL) as unique_symbols,
    COUNT(CASE WHEN PERIOD_TYPE = 'annual' THEN 1 END) as annual_records,
    COUNT(CASE WHEN PERIOD_TYPE = 'quarterly' THEN 1 END) as quarterly_records,
    MIN(FISCAL_DATE_ENDING) as earliest_date,
    MAX(FISCAL_DATE_ENDING) as latest_date,
    MAX(LOAD_DATE) as load_date
FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW;

-- Step 11: Sample final data
SELECT 
    'Final Data Sample' as step,
    SYMBOL,
    FISCAL_DATE_ENDING,
    PERIOD_TYPE,
    OPERATING_CASHFLOW,
    CASHFLOW_FROM_INVESTMENT,
    CASHFLOW_FROM_FINANCING,
    NET_INCOME,
    LOAD_DATE
FROM FIN_TRADE_EXTRACT.RAW.CASH_FLOW
ORDER BY SYMBOL, FISCAL_DATE_ENDING DESC, PERIOD_TYPE
LIMIT 10;

-- Cleanup staging table
DROP TABLE IF EXISTS FIN_TRADE_EXTRACT.RAW.CASH_FLOW_STAGE;

SELECT '✅ Cash flow data load complete!' as status;
