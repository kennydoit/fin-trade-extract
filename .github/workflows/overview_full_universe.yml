name: Overview Full Universe Load

on:
  workflow_dispatch:
    inputs:
      function_name:
        description: AWS Lambda function name
        required: true
        default: fin-trade-extract-overview
      batch_size:
        description: Symbols per batch (Lambda expects up to ~50)
        required: true
        default: '50'
      inter_batch_sleep_seconds:
        description: Sleep between batches to avoid pressure on Lambda
        required: true
        default: '1'
      load_date:
        description: Load date (YYYY-MM-DD) for Snowflake watermark, defaults to today
        required: false
  schedule:
    - cron: '30 5 * * *'

jobs:
  full-universe:
    runs-on: ubuntu-latest
    permissions:
      id-token: write   # for AWS OIDC
      contents: read
    env:
      PYTHONUNBUFFERED: '1'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'


      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r scripts/github_actions/requirements.txt

      # Step 1: Fetch Alpha Vantage LISTING_STATUS and upload to S3
      - name: Fetch LISTING_STATUS and upload to S3
        env:
          ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
          S3_BUCKET: fin-trade-craft-landing
          S3_LISTING_STATUS_PREFIX: listing_status/
        run: |
          python scripts/github_actions/fetch_listing_status_to_s3.py

      # Step 2: Load/merge LISTING_STATUS into Snowflake
      - name: Load LISTING_STATUS into Snowflake
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          LOAD_DATE: ${{ github.event.inputs.load_date }}
        run: |
          snowsql -a $SNOWFLAKE_ACCOUNT -u $SNOWFLAKE_USER -p $SNOWFLAKE_PASSWORD \
            -w $SNOWFLAKE_WAREHOUSE -d $SNOWFLAKE_DATABASE -s $SNOWFLAKE_SCHEMA \
            -q "!source snowflake/runbooks/load_listing_status_from_s3.sql;"

      - name: Configure AWS credentials (OIDC)
        if: env.AWS_ROLE_TO_ASSUME != ''
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ env.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Invoke Lambda across full symbol universe
        env:
          ALPHAVANTAGE_API_KEY: ${{ secrets.ALPHAVANTAGE_API_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          python scripts/github_actions/invoke_overview_lambda.py \
            --function-name "${{ github.event.inputs.function_name || 'fin-trade-extract-overview' }}" \
            --batch-size ${{ github.event.inputs.batch_size || '50' }} \
            --sleep-seconds ${{ github.event.inputs.inter_batch_sleep_seconds || '1' }}

      - name: Merge in Snowflake (watermark by date)
        env:
          SNOWFLAKE_ACCOUNT: ${{ secrets.SNOWFLAKE_ACCOUNT }}
          SNOWFLAKE_USER: ${{ secrets.SNOWFLAKE_USER }}
          SNOWFLAKE_PASSWORD: ${{ secrets.SNOWFLAKE_PASSWORD }}
          SNOWFLAKE_WAREHOUSE: ${{ secrets.SNOWFLAKE_WAREHOUSE }}
          SNOWFLAKE_DATABASE: ${{ secrets.SNOWFLAKE_DATABASE }}
          SNOWFLAKE_SCHEMA: ${{ secrets.SNOWFLAKE_SCHEMA }}
          LOAD_DATE: ${{ github.event.inputs.load_date }}
        run: |
          python scripts/github_actions/snowflake_merge_full_load.py

    env:
      # Configure your AWS OIDC role and region at the workflow or repo level
      AWS_ROLE_TO_ASSUME: ${{ secrets.AWS_ROLE_TO_ASSUME }}
      AWS_REGION: ${{ secrets.AWS_REGION }}
